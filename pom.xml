<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.fsn.framework</groupId>
    <artifactId>fsn-framework-core</artifactId>
    <version>2.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <java.version>1.8</java.version>
    </properties>

    <parent>
        <groupId>org.fsn.framework</groupId>
        <artifactId>fsn-framework-root</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>


    <dependencies>
        <dependency>
            <groupId>org.fsn.framework</groupId>
            <artifactId>fsn-framework-common</artifactId>
            <version>2.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
    </dependencies>

    <!--<build>-->
        <!--<plugins>-->
            <!--<plugin>-->
                <!--<groupId>com.github.wvengen</groupId>-->
                <!--<artifactId>proguard-maven-plugin</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>proguard</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<proguardVersion>5.3.3</proguardVersion>-->
                    <!--<injar>${project.build.finalName}.jar</injar>-->
                    <!--<outjar>${project.build.finalName}.jar</outjar>-->
                    <!--<obfuscate>true</obfuscate>-->
                    <!--<options>-->
                        <!--<option>-dontshrink</option>-->
                        <!--<option>-dontoptimize</option>-->
                        <!--&lt;!&ndash; This option will replace all strings in reflections method invocations with new class names.-->
                             <!--For example, invokes Class.forName('className')&ndash;&gt;-->
                        <!--<option>-adaptclassstrings</option>-->
                        <!--&lt;!&ndash; This option will save all original annotations and etc. Otherwise all we be removed from files.&ndash;&gt;-->
                        <!--<option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,-->
                            <!--SourceFile,LineNumberTable,*Annotation*,EnclosingMethod-->
                        <!--</option>-->
                        <!--&lt;!&ndash; This option will save all original names in interfaces (without obfuscate).&ndash;&gt;-->
                        <!--<option>-keepnames interface **</option>-->
                        <!--&lt;!&ndash; This option will save all original methods parameters in files defined in -keep sections,-->
                             <!--otherwise all parameter names will be obfuscate.&ndash;&gt;-->
                        <!--<option>-keepparameternames</option>-->
                        <!--&lt;!&ndash; This option will save all original class files (without obfuscate) but obfuscate all in domain package.&ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-keep class !com.slm.proguard.example.spring.boot.domain.** { *; }</option>&ndash;&gt;-->
                        <!--<option>-keep class !com.slm.proguard.example.spring.boot.controller.ExampleController { *; }-->
                        <!--</option>-->
                        <!--&lt;!&ndash; This option will save all original class files (without obfuscate) in service package&ndash;&gt;-->
                        <!--&lt;!&ndash;<option>-keep class com.slm.proguard.example.spring.boot.service { *; }</option>&ndash;&gt;-->
                        <!--&lt;!&ndash; This option will save all original interfaces files (without obfuscate) in all packages.&ndash;&gt;-->
                        <!--<option>-keep interface * extends * { *; }</option>-->
                        <!--&lt;!&ndash; This option will save all original defined annotations in all class in all packages.&ndash;&gt;-->
                        <!--<option>-keepclassmembers class * {-->
                            <!--@org.springframework.beans.factory.annotation.Autowired *;-->
                            <!--@org.springframework.beans.factory.annotation.Value *;-->
                            <!--}-->
                        <!--</option>-->
                    <!--</options>-->
                    <!--<libs>-->
                        <!--&lt;!&ndash; Include main JAVA library required.&ndash;&gt;-->
                        <!--<lib>${java.home}/lib/rt.jar</lib>-->
                        <!--<lib>${java.home}/lib/jce.jar</lib>-->
                    <!--</libs>-->
                <!--</configuration>-->
                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>net.sf.proguard</groupId>-->
                        <!--<artifactId>proguard-base</artifactId>-->
                        <!--<version>5.3.3</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->
            <!--</plugin>-->
        <!--</plugins>-->
    <!--</build>-->
</project>